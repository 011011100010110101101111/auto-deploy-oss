package org.gitor.autodeployoss.service.impl;import org.gitor.autodeployoss.service.AbstractOSSService;import org.gitor.autodeployoss.service.DeployService;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Service;import java.io.BufferedReader;import java.io.InputStreamReader;/** * @author : liuwenlong * @date : 2018/5/31 22:29 */@Servicepublic class DeployServiceImpl extends AbstractOSSService implements DeployService{    @Value("${git.url}")    private String gitUrl;    @Value("${shell.path}")    private String path;    @Value("${git.branch}")    private String branch;    @Override    protected boolean cloneCode() {        try {            String shpath="/Users/liuwenlong/myApp/github/auto-deploy-oss/src/main/resources/autoDeploy.sh";            String[] shell = new String[4];            shell[0] = shpath;            shell[1] = "https://github.com/gitors/calligraphy.git";            shell[2] = "/Users/liuwenlong/Downloads/test";            shell[3] = "";            Process ps = Runtime.getRuntime().exec(shell);            ps.waitFor();            BufferedReader br = new BufferedReader(new InputStreamReader(ps.getInputStream()));            StringBuilder sb = new StringBuilder();            String line;            while ((line = br.readLine()) != null) {                sb.append(line).append("\n");            }            String result = sb.toString();            System.out.println(result);        }        catch (Exception e) {            e.printStackTrace();        }        return false;    }    @Override    protected boolean update() {        return false;    }}